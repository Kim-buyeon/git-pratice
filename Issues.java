package othello2;

public class Issues
{
    /*
     * ........
     * ........
     * ..XXXO..
     * ...XO...
     * ...OX...
     * ........
     * ........
     * ........
     * Please enter the row number where you would like to place your piece.
     * 3
     * Please enter the column number where  you would like to place your piece.
     * 7
     * ........
     * ........
     * ..XXXXX.
     * ...XO...
     * ...OX...
     * ........
     * ........
     * ........
     * 
     * vs. 
     * 
     * ........
     * ........
     * ..XXXXX.
     * ..XXO...
     * ..XOX...
     * ..O.....
     * ........
     * ........
     * Please enter the row number where you would like to place your piece.
     * 4
     * Please enter the column number where  you would like to place your piece.
     * 6
     * ........
     * ........
     * ..XXXXX.
     * ..XXOX..
     * ..XOX...
     * ..O.....
     * ........
     * ........
     */

    /*
    OthelloGame 클래스 설명 :
주요 구성 요소
게임 보드: 8x8 크기의 2차원 배열로 표현됩니다.
게임 상태: 각 플레이어의 돌 위치와 점수를 관리합니다.
AI 로직: 컴퓨터 플레이어의 움직임을 결정합니다.
주요 메서드
게임 초기화 및 상태 관리
OthelloGame(): 게임을 초기화합니다.
validMove(): 주어진 위치에 돌을 놓을 수 있는지 확인합니다.
updateBoard(): 돌을 놓은 후 보드 상태를 업데이트합니다.
gameOver(): 게임 종료 여부를 확인합니다.
플레이어 턴 관리
humansTurn(): 사용자의 턴을 처리합니다.
computersTurn(): 컴퓨터의 턴을 처리합니다.
AI 구현
randAI(): 무작위로 돌을 놓는 간단한 AI입니다.
oneMoveAI(): 한 수 앞을 내다보는 AI입니다.
strategicOneMoveAI(): 전략적 가중치를 고려하는 AI입니다.
nForsightAI(): n수 앞을 내다보는 고급 AI입니다.
유틸리티 메서드
getNumFlipped(): 특정 위치에 돌을 놓았을 때 뒤집을 수 있는 돌의 수를 계산합니다.
flipPieces(): 돌을 뒤집습니다.
determineWinner(): 승자를 결정합니다.
*/
}